// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext {
    kotlin_version = "1.4.30"
    gradle_build_version = "7.0.0-alpha10"
    build_tools_version = "30.0.3"

    multi_dex_version = "1.0.3"

    // These should be upgraded in unison
    okhttp_version = "4.9.1"
    okio_version = "2.8.0"
    conscrypt_version = "2.5.1"

    kodeinVersion = "7.5.0"
    kodeinComposeVersion = "7.5.0"
    coroutines_version = "1.4.2"
    rome_version = "1.7.1-f4"
    moshi_version = "1.5.0"
    threetentest_version = "1.2.2"
    threetenabp_version = "1.2.2"
    jsoup_version = "1.7.3"
    readability4j_version = "1.0.5"

    androidx_core_version = "1.2.0"
    workmanager_version = '2.4.0'
    constraintlayout_version = "2.0.4"
    recyclerview_version = "1.0.0"
    legacy_support_version = "1.0.0"
    appcompat_version = "1.3.0-beta01"
    material_version = "1.1.0"
    preference_version = "1.1.0"
    test_runner_version = "1.1.0"
    test_rules_version = "1.1.0"
    lifecycle_version = "2.2.0"
    room_version = "2.3.0-rc01"
    nav_version = "2.1.0"
    activityComposeVersion = "1.3.0-alpha03"
    composeVersion = "1.0.0-beta01"
    constraintLayoutComposeVersion = "1.0.0-alpha05"
    navigationComposeVersion = "1.0.0-alpha09"
    pagingVersion = "3.0.0-beta02"
    pagingComposeVersion = "1.0.0-alpha08"
    coilComposeVersion = "0.7.0"

    espresso_version = "3.1.0"
    uiautomator_version = "2.2.0"
    test_ext_junit_version = "1.0.0"

    mockk_version = "1.9.3"
    mockito_version = "2.13.0"
  }


  repositories {
    mavenCentral()
    google()
  }
  dependencies {
    classpath "com.android.tools.build:gradle:$gradle_build_version"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

allprojects {
//  repositories {
//    google()
//    mavenCentral()
//    jcenter() {
//      content {
//        includeModule("org.jetbrains.trove4j", "trove4j")
//        includeModule("com.linkedin.dexmaker", "dexmaker")
//      }
//    }
//  }

  tasks.withType(JavaCompile) {
    options.incremental = true
    options.encoding = 'UTF-8'
  }
}


subprojects {
  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
      // Treat all Kotlin warnings as errors
      allWarningsAsErrors = false

      freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'

      // Enable experimental coroutines APIs, including Flow
      freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
      freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.FlowPreview'
      freeCompilerArgs += '-Xopt-in=kotlin.Experimental'

      // Set JVM target to 1.8
      jvmTarget = "1.8"
    }
  }
}
